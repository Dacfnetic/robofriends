{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","inherits","createClass","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.d09cf2f7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robots'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                }\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue'\r\n            type=\"search\"\r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', borderTop: '1px solid black', height: '100%'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n        return response.json();\r\n    }).then(users => {\r\n        this.setState({robots: users});\r\n    });\r\n    \r\n}\r\n\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        return !robots.length ?\r\n            <h1>Loading</h1>\r\n            :\r\n            <div className='tc'>\r\n                <h1 className='f1'>Roboamigos perrones</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>    \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}